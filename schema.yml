openapi: 3.0.3
info:
  title: Ticketing System API
  version: 1.0.0
  description: API documentation for the ticketing system
paths:
  /batch_app/batch:
    get:
      operationId: batch_app_batch_retrieve
      tags:
      - batch_app
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Batch'
          description: ''
    post:
      operationId: batch_app_batch_create
      tags:
      - batch_app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Batch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Batch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Batch'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Batch'
          description: ''
    put:
      operationId: batch_app_batch_update
      tags:
      - batch_app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Batch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Batch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Batch'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Batch'
          description: ''
  /batch_app/batches:
    get:
      operationId: batch_app_batches_retrieve
      tags:
      - batch_app
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Batch'
          description: ''
  /batch_app/batches/by:
    get:
      operationId: batch_app_batches_by_retrieve
      tags:
      - batch_app
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Batch'
          description: ''
  /event_app/event:
    get:
      operationId: event_app_event_retrieve
      tags:
      - event_app
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    post:
      operationId: event_app_event_create
      tags:
      - event_app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Event'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    put:
      operationId: event_app_event_update
      tags:
      - event_app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Event'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
  /event_app/events:
    get:
      operationId: event_app_events_retrieve
      tags:
      - event_app
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
  /event_app/events/by/:
    get:
      operationId: event_app_events_by_retrieve
      tags:
      - event_app
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
  /order_app/order:
    get:
      operationId: order_app_order_retrieve
      tags:
      - order_app
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    post:
      operationId: order_app_order_create
      tags:
      - order_app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    put:
      operationId: order_app_order_update
      tags:
      - order_app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /order_app/orders:
    get:
      operationId: order_app_orders_retrieve
      tags:
      - order_app
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /order_app/orders/by/:
    get:
      operationId: order_app_orders_by_retrieve
      tags:
      - order_app
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /ticket_app/ticket:
    get:
      operationId: ticket_app_ticket_retrieve
      tags:
      - ticket_app
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
          description: ''
    post:
      operationId: ticket_app_ticket_create
      tags:
      - ticket_app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ticket'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ticket'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ticket'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
          description: ''
    put:
      operationId: ticket_app_ticket_update
      tags:
      - ticket_app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ticket'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ticket'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ticket'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
          description: ''
  /ticket_app/tickets:
    get:
      operationId: ticket_app_tickets_retrieve
      tags:
      - ticket_app
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
          description: ''
  /ticket_app/tickets/by/:
    get:
      operationId: ticket_app_tickets_by_retrieve
      tags:
      - ticket_app
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
          description: ''
  /transaction_app/transaction:
    get:
      operationId: transaction_app_transaction_retrieve
      tags:
      - transaction_app
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
    post:
      operationId: transaction_app_transaction_create
      tags:
      - transaction_app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Transaction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Transaction'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
    put:
      operationId: transaction_app_transaction_update
      tags:
      - transaction_app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Transaction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Transaction'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
  /transaction_app/transactions:
    get:
      operationId: transaction_app_transactions_retrieve
      tags:
      - transaction_app
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
  /transaction_app/transactions/by/:
    get:
      operationId: transaction_app_transactions_by_retrieve
      tags:
      - transaction_app
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
  /user_app/user:
    get:
      operationId: user_app_user_retrieve
      tags:
      - user_app
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: user_app_user_create
      tags:
      - user_app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: user_app_user_update
      tags:
      - user_app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /user_app/users:
    get:
      operationId: user_app_users_retrieve
      tags:
      - user_app
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /user_app/users/by/:
    get:
      operationId: user_app_users_by_retrieve
      tags:
      - user_app
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
components:
  schemas:
    Batch:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 128
        description:
          type: string
        limit:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        end_date:
          type: string
          format: date-time
          nullable: true
        start_date:
          type: string
          format: date-time
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/BatchStatusEnum'
          minimum: 0
          maximum: 9223372036854775807
        event:
          type: integer
      required:
      - created_at
      - event
      - id
      - name
      - updated_at
    BatchStatusEnum:
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      type: integer
      description: |-
        * `1` - Inactive
        * `2` - Active
        * `3` - Expired
        * `4` - Completed
        * `5` - Excluded
    Event:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 128
        active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        closing_date:
          type: string
          format: date-time
          readOnly: true
        status:
          $ref: '#/components/schemas/EventStatusEnum'
        location:
          type: string
          nullable: true
          maxLength: 256
      required:
      - closing_date
      - created_at
      - id
      - name
    EventStatusEnum:
      enum:
      - open
      - closed
      type: string
      description: |-
        * `open` - Open
        * `closed` - Closed
    Order:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        total_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,14}(?:\.\d{0,2})?$
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        status:
          type: string
          maxLength: 128
        transaction:
          type: integer
        user:
          type: integer
      required:
      - created_at
      - id
      - status
      - total_amount
      - transaction
      - updated_at
      - user
    PaymentMethodEnum:
      enum:
      - 1
      - 2
      - 3
      - 4
      type: integer
      description: |-
        * `1` - Credit Card
        * `2` - Debit Card
        * `3` - Pix
        * `4` - Billet
    Ticket:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 128
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        status:
          allOf:
          - $ref: '#/components/schemas/TicketStatusEnum'
          minimum: -9223372036854775808
          maximum: 9223372036854775807
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        batch:
          type: integer
        order:
          type: integer
        user:
          type: integer
      required:
      - batch
      - created_at
      - id
      - name
      - order
      - price
      - quantity
      - status
      - updated_at
      - user
    TicketStatusEnum:
      enum:
      - 1
      - 2
      - 3
      - 4
      type: integer
      description: |-
        * `1` - Used
        * `2` - Active
        * `3` - Expired
        * `4` - Excluded
    Transaction:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        status:
          allOf:
          - $ref: '#/components/schemas/TransactionStatusEnum'
          minimum: -9223372036854775808
          maximum: 9223372036854775807
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        external_id:
          type: string
          maxLength: 128
        payment_method:
          allOf:
          - $ref: '#/components/schemas/PaymentMethodEnum'
          minimum: -9223372036854775808
          maximum: 9223372036854775807
        user:
          type: integer
      required:
      - amount
      - created_at
      - external_id
      - id
      - payment_method
      - status
      - updated_at
      - user
    TransactionStatusEnum:
      enum:
      - 1
      - 2
      - 3
      - 4
      type: integer
      description: |-
        * `1` - Pending
        * `2` - Completed
        * `3` - Failed
        * `4` - Refunded
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 128
        active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        pass_hash:
          type: string
          maxLength: 256
        sal:
          type: string
          maxLength: 128
        status:
          $ref: '#/components/schemas/UserStatusEnum'
        location:
          type: string
          nullable: true
          maxLength: 256
      required:
      - created_at
      - id
      - name
      - pass_hash
      - sal
    UserStatusEnum:
      enum:
      - active
      - inactive
      type: string
      description: |-
        * `active` - Active
        * `inactive` - Inactive
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
